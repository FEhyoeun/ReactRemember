{"version":3,"sources":["components/RememberForm.js","components/Remember.js","components/RememberList.js","App.js","index.js"],"names":["RememberForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Remember","somethings","completeSomething","removeSomething","updateSomething","setEdit","map","something","index","isComplete","onClick","RememberList","setSomethings","test","newSomething","updatedSomethings","removeArr","filter","somethingId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAiEeA,MA/Df,SAAsBC,GAClB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACNF,EAASG,QAAQC,WAIrB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAgBtB,OACI,sBAAMW,UAAU,gBAAgBC,SAbf,SAAAH,GACjBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGVC,EAAS,KAKT,SACKL,EAAME,KACH,qCACI,uBACIoB,KAAK,OACLC,YAAY,wBACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,iBACVW,SAAUd,EACVe,IAAKpB,IAET,wBAAQQ,UAAU,kBAAlB,kCAIA,qCACI,uBACIQ,KAAK,OACLC,YAAY,4BACZpB,MAAOC,EACPoB,KAAK,OACLV,UAAU,sBACVW,SAAUd,EACVe,IAAKpB,IAET,wBAAQQ,UAAU,uBAAlB,kC,sBCJTa,MA/Cf,YAAwF,IAApEC,EAAmE,EAAnEA,WAAYC,EAAuD,EAAvDA,kBAAmBC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,gBAChE,EAAwB9B,mBAAS,CAC7BgB,GAAI,KACJd,MAAO,KAFX,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAcf,KAAMA,EAAMa,SAThB,SAAAZ,GACjB4B,EAAgB7B,EAAKe,GAAId,GACzB6B,EAAQ,CACJf,GAAI,KACJd,MAAO,QASRyB,EAAWK,KAAI,SAACC,EAAWC,GAAZ,OAClB,sBACIrB,UAAWoB,EAAUE,WAAa,yBAA2B,gBADjE,UAKI,qBAEIC,QAAS,kBAAMR,EAAkBK,EAAUjB,KAF/C,SAGKiB,EAAUb,MAFNa,EAAUjB,IAKnB,sBAAKH,UAAU,QAAf,UACI,cAAC,IAAD,CACIuB,QAAS,kBAAMP,EAAgBI,EAAUjB,KACzCH,UAAU,gBACd,cAAC,IAAD,CACIuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAUjB,GAAId,MAAO+B,EAAUb,QAC5DP,UAAU,mBAfbqB,OCgCFG,MAvDf,WACI,MAAoCrC,mBAAS,IAA7C,mBAAO2B,EAAP,KAAmBW,EAAnB,KAwCA,OACI,gCACI,0DACA,cAAC,EAAD,CAAcxB,SAxCD,SAAAmB,GACjB,GAAKA,EAAUb,OAAQ,QAAQmB,KAAKN,EAAUb,MAA9C,CAIA,IAAMoB,EAAY,CAAIP,GAAJ,mBAAkBN,IACpCW,EAAcE,OAmCV,cAAC,EAAD,CACIb,WAAYA,EACZC,kBAjCc,SAAAZ,GACtB,IAAIyB,EAAoBd,EAAWK,KAAI,SAAAC,GAInC,OAHIA,EAAUjB,KAAOA,IACjBiB,EAAUE,YAAcF,EAAUE,YAE/BF,KAEXK,EAAcG,IA2BNZ,gBAdY,SAAAb,GACpB,IAAM0B,EAAY,YAAIf,GAAYgB,QAAO,SAAAV,GAAS,OAAIA,EAAUjB,KAAOA,KACvEsB,EAAcI,IAaNZ,gBAxBY,SAACc,EAAaC,GAC7BA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI5CkB,GAAc,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAAcC,EAAWE,eCrBtEC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCJNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5ccc5e50.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nfunction RememberForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    // input에 입력한 것\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    // 폼 제출할 때\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000), // id값 랜덤하게 주기\r\n            text: input // text로는 input의 내용\r\n        });\r\n\r\n        setInput('');\r\n    };\r\n\r\n\r\n    return (\r\n        <form className=\"remember-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? ( // 수정이면\r\n                <>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Update your something\"\r\n                        value={input}\r\n                        name=\"text\"\r\n                        className=\"remember-input\"\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className=\"remember-button\">Update something!</button>\r\n                </>\r\n            ) : // 그게 아니면(내용 추가일 때는)\r\n                (\r\n                    <>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Add something to remember\"\r\n                            value={input}\r\n                            name=\"text\"\r\n                            className=\"remember-input edit\"\r\n                            onChange={handleChange}\r\n                            ref={inputRef}\r\n                        />\r\n                        <button className=\"remember-button edit\">Add something!</button>\r\n                    </>\r\n                )}\r\n\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default RememberForm\r\n","import React, { useState } from 'react';\r\nimport RememberForm from './RememberForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Remember({ somethings, completeSomething, removeSomething, updateSomething }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateSomething(edit.id, value);\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        });\r\n    };\r\n\r\n    if (edit.id) {\r\n        return <RememberForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n\r\n    return somethings.map((something, index) => (\r\n        <div\r\n            className={something.isComplete ? 'something-row complete' : 'something-row'}\r\n            key={index}\r\n        >\r\n\r\n            <div\r\n                key={something.id}\r\n                onClick={() => completeSomething(something.id)}>\r\n                {something.text}\r\n            </div>\r\n\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine // 지우는 버튼\r\n                    onClick={() => removeSomething(something.id)}\r\n                    className='delete-icon' />\r\n                <TiEdit // 업데이트 하는 버튼\r\n                    onClick={() => setEdit({ id: something.id, value: something.text })}\r\n                    className='edit-icon'\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    ));\r\n}\r\n\r\nexport default Remember\r\n","import React, { useState } from 'react';\r\nimport Remember from './Remember';\r\nimport RememberForm from './RememberForm';\r\n\r\nfunction RememberList() {\r\n    const [somethings, setSomethings] = useState([]);\r\n\r\n    // 기억할 내용 추가\r\n    const addSomething = something => {\r\n        if (!something.text || /^\\s*$/.test(something.text)) {\r\n            return;\r\n        };\r\n\r\n        const newSomething = [something, ...somethings]; // something, ...somethings를 해야 역순으로 바로 집어 넣어짐.\r\n        setSomethings(newSomething);\r\n    };\r\n\r\n    // 완료 처리\r\n    const completeSomething = id => {\r\n        let updatedSomethings = somethings.map(something => {\r\n            if (something.id === id) {\r\n                something.isComplete = !something.isComplete\r\n            }\r\n            return something;\r\n        });\r\n        setSomethings(updatedSomethings);\r\n    };\r\n\r\n    // 업데이트\r\n    const updateSomething = (somethingId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n\r\n        setSomethings(prev => prev.map(item => (item.id === somethingId ? newValue : item)));\r\n    };\r\n\r\n    // 지우기\r\n    const removeSomething = id => {\r\n        const removeArr = [...somethings].filter(something => something.id !== id);\r\n        setSomethings(removeArr);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's your 'something'?</h1>\r\n            <RememberForm onSubmit={addSomething}></RememberForm>\r\n            <Remember\r\n                somethings={somethings}\r\n                completeSomething={completeSomething}\r\n                removeSomething={removeSomething}\r\n                updateSomething={updateSomething}\r\n            ></Remember>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RememberList\r\n","import React from 'react';\nimport './App.css';\nimport RememberForm from './components/RememberForm';\nimport RememberList from './components/RememberList';\n\nfunction App() {\n  return (\n    <div className=\"remember\">\n      <RememberList></RememberList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}